(define (domain rover_mars_extended)
    (:requirements :negative-preconditions :typing :equality :fluents :durative-actions :constraints :preferences)
    (:types rover position - object)
    (:predicates
        (in_position ?r - rover ?p - position)
        (have_image ?r - rover ?p - position)
        (drilled ?r - rover ?p - position)
        (have_earth_communication ?r - rover ?p - position)
        (have_samples_analysed ?r - rover ?p - position)
        (occupied ?p - position)
    )
  	(:functions
     	(battery_percentage ?r - rover)
     	(distance ?x - position ?y - position)
     	(drill_duration)
        (drill_consumption)
        (take_picture_duration)
        (take_picture_consumption)
        (earth_communication_duration)
        (earth_communication_consumption)
     	(analyse_samples_duration)
        (analyse_samples_consumption))
    (:durative-action move
        :parameters (?r - rover ?x - position ?y - position)
        :duration (= ?duration (distance ?x ?y))
        :condition (and  (at start (>= (battery_percentage ?r) 20))
                     		(at start (>= (battery_percentage ?r) (distance ?x ?y)))
                     		(at start (not (= ?x ?y)))
                            (at start (not (occupied ?y)))
                            (at start (in_position ?r ?x)))
        :effect (and    (at start (not (in_position ?r ?x)))
                        (at end (in_position ?r ?y))
                        (at end (occupied ?y))
                        (at start (not (occupied ?x)))
                  		(at end (decrease (battery_percentage ?r) (distance ?x ?y))))
    )
    (:durative-action take_picture
        :parameters (?r - rover ?p - position)
        :duration (= ?duration take_picture_duration)
        :condition (and  (over all (in_position ?r ?p))
                     	 (at start (>= (battery_percentage ?r) take_picture_consumption)))
        :effect (and (at end (have_image ?r ?p))
                     (at end (decrease (battery_percentage ?r) take_picture_consumption)))
                  	 
    )    
    (:durative-action drill
        :parameters (?r - rover ?p - position)
        :duration (= ?duration drill_duration)              
        :condition (and (over all (in_position ?r ?p))
                     	(at start (>= (battery_percentage ?r) drill_consumption)))
        :effect (and (at end (drilled ?r ?p))
                  	  (at end (decrease (battery_percentage ?r) drill_consumption)))
    )
    (:durative-action earth_communication
        :parameters (?r - rover ?p - position)
        :duration (= ?duration earth_communication_duration)
        :condition (and (over all (in_position ?r ?p))
                     (at start (>= (battery_percentage ?r) earth_communication_consumption)))
        :effect (and (at end (have_earth_communication ?r ?p))
                     (at end (decrease (battery_percentage ?r) earth_communication_consumption)))
    )
    (:durative-action analyse_samples
        :parameters (?r - rover ?p - position)
        :duration (= ?duration analyse_samples_duration)
        :condition (and (over all (in_position ?r ?p))
                        (at start (>= (battery_percentage ?r) analyse_samples_consumption)))
        :effect (and (at end (have_samples_analysed ?r ?p))
                      (at end (decrease (battery_percentage ?r)  analyse_samples_consumption)))
    )
  	(:durative-action recharge_battery
        :parameters (?r - rover)
        :duration (= ?duration (* (- 100 (battery_percentage ?r)) 0.1))              
        :condition (at start (< (battery_percentage ?r) 20))
        :effect (at end (assign (battery_percentage ?r) 100))
    )
)